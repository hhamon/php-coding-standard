diff --git a/src/Unleashed/Helpers/SniffLocalCache.php b/src/Unleashed/Helpers/SniffLocalCache.php
index ad0792f..baf8942 100644
--- a/src/Unleashed/Helpers/SniffLocalCache.php
+++ b/src/Unleashed/Helpers/SniffLocalCache.php
@@ -14,14 +14,11 @@ use PHP_CodeSniffer\Files\File;
 final class SniffLocalCache
 {
     /** @var array<int, array<string, mixed>> */
-    private static $cache = [];
+    private static array $cache = [];
 
-    /**
-     * @return mixed
-     */
-    public static function getAndSetIfNotCached(File $phpcsFile, string $key, \Closure $lazyValue)
+    public static function getAndSetIfNotCached(File $phpcsFile, string $key, \Closure $lazyValue): mixed
     {
-        $fixerLoops  = $phpcsFile->fixer !== null ? $phpcsFile->fixer->loops : 0;
+        $fixerLoops  = $phpcsFile->fixer?->loops ?? 0;
         $internalKey = \sprintf('%s-%s', $phpcsFile->getFilename(), $key);
 
         self::setIfNotCached($fixerLoops, $internalKey, $lazyValue);
diff --git a/src/Unleashed/Sniffs/Commenting/ForbiddenSingleLineCommentsSniff.php b/src/Unleashed/Sniffs/Commenting/ForbiddenSingleLineCommentsSniff.php
index 3bed058..94d3a48 100644
--- a/src/Unleashed/Sniffs/Commenting/ForbiddenSingleLineCommentsSniff.php
+++ b/src/Unleashed/Sniffs/Commenting/ForbiddenSingleLineCommentsSniff.php
@@ -13,7 +13,7 @@ final class ForbiddenSingleLineCommentsSniff implements Sniff
     public const CODE_COMMENT_FORBIDDEN = 'CommentForbidden';
 
     /** @var string[] */
-    public $forbiddenCommentPatterns = [];
+    public array $forbiddenCommentPatterns = [];
 
     /**
      * @return array<int, (int|string)>
diff --git a/src/Unleashed/Sniffs/DoctrineMigrations/DescriptionRequiredSniff.php b/src/Unleashed/Sniffs/DoctrineMigrations/DescriptionRequiredSniff.php
index ab9d787..dcfcf56 100644
--- a/src/Unleashed/Sniffs/DoctrineMigrations/DescriptionRequiredSniff.php
+++ b/src/Unleashed/Sniffs/DoctrineMigrations/DescriptionRequiredSniff.php
@@ -80,7 +80,7 @@ final class DescriptionRequiredSniff implements Sniff
         );
     }
 
-    private static function findMethodInClass(File $phpcsFile, string $methodName, int $startPtr, int $endPtr): ?int
+    private static function findMethodInClass(File $phpcsFile, string $methodName, int $startPtr, int $endPtr): int|null
     {
         do {
             $nextFunctionPointer = TokenHelper::findNext($phpcsFile, T_FUNCTION, $startPtr + 1);
@@ -110,7 +110,7 @@ final class DescriptionRequiredSniff implements Sniff
         return null;
     }
 
-    private static function findApproximateClassEndPointer(File $phpcsFile, int $ptrWithinClass): ?int
+    private static function findApproximateClassEndPointer(File $phpcsFile, int $ptrWithinClass): int|null
     {
         $classPtrs = \array_keys(ClassHelper::getAllNames($phpcsFile));
 
diff --git a/src/Unleashed/Sniffs/Namespaces/FullyQualifiedGlobalFunctionsSniff.php b/src/Unleashed/Sniffs/Namespaces/FullyQualifiedGlobalFunctionsSniff.php
index 71be9a5..f9492c7 100644
--- a/src/Unleashed/Sniffs/Namespaces/FullyQualifiedGlobalFunctionsSniff.php
+++ b/src/Unleashed/Sniffs/Namespaces/FullyQualifiedGlobalFunctionsSniff.php
@@ -11,11 +11,10 @@ use Unleashed\Helpers\UseStatements;
 
 final class FullyQualifiedGlobalFunctionsSniff implements Sniff
 {
-    /** @var bool */
-    public $onlyOptimizedFunctions = false;
+    public bool $onlyOptimizedFunctions = false;
 
     /** @var array<string, bool> */
-    private $optimizedFunctions = [
+    private array $optimizedFunctions = [
         // @see https://github.com/php/php-src/blob/PHP-7.4/Zend/zend_compile.c "zend_try_compile_special_func"
         'array_key_exists'     => true,
         'array_slice'          => true,
diff --git a/src/Unleashed/Sniffs/PHP/ForbiddenClassesSniff.php b/src/Unleashed/Sniffs/PHP/ForbiddenClassesSniff.php
index 80a42a6..dd2fcb7 100644
--- a/src/Unleashed/Sniffs/PHP/ForbiddenClassesSniff.php
+++ b/src/Unleashed/Sniffs/PHP/ForbiddenClassesSniff.php
@@ -19,7 +19,7 @@ final class ForbiddenClassesSniff implements Sniff
      *
      * @var string[]
      */
-    public $forbiddenClasses = [
+    public array $forbiddenClasses = [
         // phpcs:disable Unleashed.PHP.ForbiddenClasses.Forbidden
         \DateTime::class,
         // phpcs:enable
@@ -27,10 +27,8 @@ final class ForbiddenClassesSniff implements Sniff
 
     /**
      * If true, an error will be thrown; otherwise a warning
-     *
-     * @var bool
      */
-    public $error = true;
+    public bool $error = true;
 
     /**
      * Returns an array of tokens this test wants to listen for.
diff --git a/tests/expected_report.txt b/tests/expected_report.txt
index 94f1b60..340e8e5 100644
--- a/tests/expected_report.txt
+++ b/tests/expected_report.txt
@@ -10,12 +10,12 @@ tests/input/class-references.php                      10      0
 tests/input/concatenation_spacing.php                 49      0
 tests/input/constants-no-lsb.php                      2       0
 tests/input/constants-var.php                         4       0
-tests/input/ControlStructures.php                     17      2
-tests/input/doc-comment-spacing.php                   16      0
+tests/input/ControlStructures.php                     18      2
+tests/input/doc-comment-spacing.php                   17      0
 tests/input/doctrine-migration.php                    18      6
 tests/input/duplicate-assignment-variable.php         1       0
-tests/input/EarlyReturn.php                           6       0
-tests/input/example-class.php                         38      0
+tests/input/EarlyReturn.php                           7       0
+tests/input/example-class.php                         43      0
 tests/input/forbidden-comments.php                    14      0
 tests/input/forbidden-functions.php                   13      0
 tests/input/ForbiddenClasses.php                      7       0
@@ -25,14 +25,14 @@ tests/input/inline_type_hint_assertions.php           7       0
 tests/input/LowCaseTypes.php                          3       0
 tests/input/merge-conflict.php                        6       0
 tests/input/namespaces-spacing.php                    12      0
-tests/input/NamingCamelCase.php                       7       0
+tests/input/NamingCamelCase.php                       10      0
 tests/input/negation-operator.php                     2       0
 tests/input/new_with_parentheses.php                  30      0
 tests/input/not_spacing.php                           8       0
 tests/input/null_coalesce_operator.php                3       0
 tests/input/optimized-functions.php                   1       0
-tests/input/return_type_on_closures.php               17      0
-tests/input/return_type_on_methods.php                13      0
+tests/input/return_type_on_closures.php               22      0
+tests/input/return_type_on_methods.php                18      0
 tests/input/semicolon_spacing.php                     3       0
 tests/input/single-line-array-spacing.php             5       0
 tests/input/spread-operator.php                       10      0
@@ -41,16 +41,16 @@ tests/input/strict-functions.php                      4       0
 tests/input/test-case.php                             7       0
 tests/input/trailing_comma_on_array.php               1       0
 tests/input/traits-uses.php                           12      0
-tests/input/type-hints.php                            5       0
+tests/input/type-hints.php                            6       0
 tests/input/UnusedVariables.php                       2       0
 tests/input/use-function.php                          2       0
 tests/input/use-ordering.php                          9       0
 tests/input/useless-semicolon.php                     2       0
-tests/input/UselessConditions.php                     23      0
+tests/input/UselessConditions.php                     24      0
 ----------------------------------------------------------------------
-A TOTAL OF 417 ERRORS AND 8 WARNINGS WERE FOUND IN 44 FILES
+A TOTAL OF 440 ERRORS AND 8 WARNINGS WERE FOUND IN 44 FILES
 ----------------------------------------------------------------------
-PHPCBF CAN FIX 334 OF THESE SNIFF VIOLATIONS AUTOMATICALLY
+PHPCBF CAN FIX 357 OF THESE SNIFF VIOLATIONS AUTOMATICALLY
 ----------------------------------------------------------------------
 
 
diff --git a/tests/fixed/ControlStructures.php b/tests/fixed/ControlStructures.php
index a2c3be4..a1750e6 100644
--- a/tests/fixed/ControlStructures.php
+++ b/tests/fixed/ControlStructures.php
@@ -108,7 +108,7 @@ class ControlStructures
 
         try {
             echo 4;
-        } catch (Throwable $throwable) {
+        } catch (Throwable) {
         }
 
         echo 5;
diff --git a/tests/fixed/EarlyReturn.php b/tests/fixed/EarlyReturn.php
index 5a82a93..7d5eb01 100644
--- a/tests/fixed/EarlyReturn.php
+++ b/tests/fixed/EarlyReturn.php
@@ -11,7 +11,7 @@ class EarlyReturn
         return $bar === 'bar';
     }
 
-    public function foo(): ?string
+    public function foo(): string|null
     {
         foreach ($itens as $item) {
             if (! $item->isItem()) {
diff --git a/tests/fixed/NamingCamelCase.php b/tests/fixed/NamingCamelCase.php
index 57d9f2b..5493471 100644
--- a/tests/fixed/NamingCamelCase.php
+++ b/tests/fixed/NamingCamelCase.php
@@ -6,14 +6,11 @@ namespace Example;
 
 class NamingCamelCase
 {
-    /** @var mixed */
-    public $A;
+    public mixed $A;
 
-    /** @var mixed */
-    protected $B;
+    protected mixed $B;
 
-    /** @var mixed */
-    private $C;
+    private mixed $C;
 
     public function fcn(string $A): void
     {
diff --git a/tests/fixed/UselessConditions.php b/tests/fixed/UselessConditions.php
index 02f6592..fc414de 100644
--- a/tests/fixed/UselessConditions.php
+++ b/tests/fixed/UselessConditions.php
@@ -92,7 +92,7 @@ class UselessConditions
         return false;
     }
 
-    public function nullShouldNotBeTreatedAsFalse(): ?bool
+    public function nullShouldNotBeTreatedAsFalse(): bool|null
     {
         if (! $this->isAdmin) {
             return null;
diff --git a/tests/fixed/doc-comment-spacing.php b/tests/fixed/doc-comment-spacing.php
index 2f53db0..728e7f0 100644
--- a/tests/fixed/doc-comment-spacing.php
+++ b/tests/fixed/doc-comment-spacing.php
@@ -25,7 +25,7 @@ class Test
      * @psalm-var list<mixed>
      * @phpstan-var array<mixed>
      */
-    public $foo = [];
+    public array $foo = [];
 
     /**
      * Description
diff --git a/tests/fixed/example-class.php b/tests/fixed/example-class.php
index 0f98ce6..cc1f058 100644
--- a/tests/fixed/example-class.php
+++ b/tests/fixed/example-class.php
@@ -18,19 +18,16 @@ class Example implements \IteratorAggregate
 {
     private const VERSION = \PHP_VERSION - (PHP_MINOR_VERSION * 100) - PHP_PATCH_VERSION;
 
-    /** @var int|null */
-    private $foo;
+    private int|null $foo = null;
 
     /** @var string[] */
-    private $bar;
+    private array $bar;
 
-    /** @var bool */
-    private $baz;
+    private bool $baz;
 
-    /** @var ControlStructureSniff|int|string|null */
-    private $baxBax;
+    private ControlStructureSniff|int|string|null $baxBax = null;
 
-    public function __construct(?int $foo = null, array $bar = [], bool $baz = false, $baxBax = 'unused')
+    public function __construct(int|null $foo = null, array $bar = [], bool $baz = false, $baxBax = 'unused')
     {
         $this->foo    = $foo;
         $this->bar    = $bar;
@@ -41,7 +38,7 @@ class Example implements \IteratorAggregate
     /**
      * Description
      */
-    public function getFoo(): ?int
+    public function getFoo(): int|null
     {
         return $this->foo;
     }
diff --git a/tests/fixed/return_type_on_closures.php b/tests/fixed/return_type_on_closures.php
index 134bade..80ad413 100644
--- a/tests/fixed/return_type_on_closures.php
+++ b/tests/fixed/return_type_on_closures.php
@@ -22,7 +22,7 @@ static function (
     int $c,
     int $d,
     int $e,
-    int $b
+    int $b,
 ): void {
 }
 
@@ -31,7 +31,7 @@ static function (
     int $c,
     int $d,
     int $e,
-    int $b
+    int $b,
 ): void {
 }
 
@@ -40,7 +40,7 @@ static function (
     int $c,
     int $d,
     int $e,
-    int $b
+    int $b,
 ): void {
 }
 
@@ -49,7 +49,7 @@ static function (
     int $c,
     int $d,
     int $e,
-    int $b
+    int $b,
 ): void {
 }
 
@@ -58,6 +58,6 @@ static function (
     int $c,
     int $d,
     int $e,
-    int $b
+    int $b,
 ): void {
 }
diff --git a/tests/fixed/return_type_on_methods.php b/tests/fixed/return_type_on_methods.php
index 8e2c6f7..0c897ae 100644
--- a/tests/fixed/return_type_on_methods.php
+++ b/tests/fixed/return_type_on_methods.php
@@ -31,7 +31,7 @@ class Test
         int $c,
         int $d,
         int $e,
-        int $b
+        int $b,
     ): void {
     }
 
@@ -40,7 +40,7 @@ class Test
         int $c,
         int $d,
         int $e,
-        int $b
+        int $b,
     ): void {
     }
 
@@ -49,7 +49,7 @@ class Test
         int $c,
         int $d,
         int $e,
-        int $b
+        int $b,
     ): void {
     }
 
@@ -58,7 +58,7 @@ class Test
         int $c,
         int $d,
         int $e,
-        int $b
+        int $b,
     ): void {
     }
 
@@ -67,7 +67,7 @@ class Test
         int $c,
         int $d,
         int $e,
-        int $b
+        int $b,
     ): void {
     }
 }
diff --git a/tests/fixed/type-hints.php b/tests/fixed/type-hints.php
index 0e952fc..9824fb0 100644
--- a/tests/fixed/type-hints.php
+++ b/tests/fixed/type-hints.php
@@ -10,7 +10,7 @@ use Traversable;
 class TraversableTypeHints
 {
     /** @var Traversable */
-    private $parameter;
+    private Traversable $parameter;
 
     /**
      * @param Iterator $iterator
